package com.springboot.sharework.config.service;

import org.springframework.stereotype.Service;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthException;
import com.google.firebase.auth.UserRecord;
import com.google.firebase.auth.UserRecord.CreateRequest;
import com.google.firebase.auth.internal.FirebaseCustomAuthToken;
import com.springboot.sharework.payload.LoginDto;
import com.springboot.sharework.payload.RegisterDto;

@Service
public class AuthenServiceImpl {

	protected FirebaseAuth mFirebaseAuth = FirebaseAuth.getInstance();
	public String createUser(RegisterDto registerDto) throws FirebaseAuthException {
		
		CreateRequest request = new CreateRequest()
			    .setEmail(registerDto.getEmail())
			    .setEmailVerified(false)
			    .setPassword(registerDto.getPassword())
			    .setPhoneNumber(registerDto.getPhoneNumber())
			    .setDisplayName(registerDto.getDisplayName())
			    .setDisabled(false);

			UserRecord userRecord = FirebaseAuth.getInstance().createUser(request);
			
			return "Successfully created new user: " + userRecord.getUid();
	}
	
	
	public String findUserByEmail(LoginDto loginDto) throws FirebaseAuthException {
		
		UserRecord userRecord = FirebaseAuth.getInstance().getUserByEmail(loginDto.getEmail());
		if(userRecord != null) {
			return "Successfully fetched user data: " + userRecord.getEmail();
			mFirebaseAuth.signInWithEmailAndPassword(loginDto.getEmail(), loginDto.getPassword());
		}
		
		return " Not successfully fetched user data: " + loginDto.getEmail();
	
	}
	
}
